---

# Git commit SHA1.
#
docker_gc_version: 131a786886f571b656e0e4bdda967b7abc1fa7d1

# Install directory path where git clone saves files.
#
docker_gc_installdir: /opt/docker-gc

# Excluding Images From Garbage Collection
#
# There can be images that are large that serve as a common base for many application containers, and as such,
# make sense to pin to the machine, as many derivative containers will use it. This can save time in pulling those
# kinds of images.
#
docker_gc_exclude: []

# Excluding Containers From Garbage Collection
#
# There can also be containers (for example data only containers) which you would like to exclude from garbage
# collection. To do so, create /etc/docker-gc-exclude-containers, or if you want the file to be read from elsewhere,
# set the EXCLUDE_CONTAINERS_FROM_GC environment variable to its location. This file should contain name patterns
# (in the grep sense), one per line, such as mariadb-data
#
docker_gc_exclude_containers: []

# Excluding Volumes From Garbage Collection
#
# There can be occasions where you don't want to remove a dangling volume.
#
docker_gc_exclude_volumes: []

# Forcing deletion of images that have multiple tags
#
# By default, docker will not remove an image if it is tagged in multiple repositories. If you have a server running
# docker where this is the case, for example in CI environments where dockers are being built, re-tagged, and pushed,
# you can enable a force flag to override this default.
#
docker_gc_force_image_removal: false

# Forcing deletion of containers
#
# By default, if an error is encountered when cleaning up a container, Docker will report the error back and
# leave it on disk. This can sometimes lead to containers accumulating.
#
docker_gc_force_container_removal: false

# Preserving a minimum number of images for every repository
#
# You might want to always keep a set of the most recent images for any repository. For example, if you are continually
# rebuilding an image during development you would want to clear out all but the most recent version of an image.
#
docker_gc_minimum_images_to_save: 0

# Excluding Recently Exited Containers and Images From Garbage Collection
#
# By default, docker-gc will not remove a container if it exited less than 3600 seconds (1 hour) ago.
#
docker_gc_grace_period_seconds: 3600

# Crontab task file name.
#
docker_gc_cron_file: docker-gc

# Crontab task execution period.
#
# https://docs.ansible.com/ansible/latest/modules/cron_module.html#cron-module
#
docker_gc_cron_special_time: daily
